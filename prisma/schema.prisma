// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Post{
  id String @id @default(uuid())
  caption String?
  mediaUrls String[] @map("media_urls")
  createdAt DateTime @db.Timestamptz() @default(now()) @map("created_at")
  likes Int @default(0)
  views Int @default(0)
  userId String @map("user_id")

  comments Comment[]

  @@map("post")
}

model Comment{
  id String @id @default(uuid())
  text String
  createdAt DateTime @db.Timestamptz() @default(now()) @map("created_at")
  updatedAt DateTime @db.Timestamptz() @default(now()) @map("updated_at")
  likes Int @default(0)

  postId String @map("post_id")
  post Post @relation(fields: [postId], references: [id])

  parentId String? @map("parent_id")
  parent Comment? @relation("ParentChild", fields: [parentId], references: [id])

  replies Comment[] @relation("ParentChild")

  @@map("comment")
}

model Event{
  id String @id @default(uuid())
  name String
  description String
  type EventType
  location String?
  startDate DateTime @map("start_date")
  endDate DateTime @map("end_date")
  organizerId String @map("organizer_id")

  @@map("event")
 }

model event_users{
  userId String @map("user_id")
  eventId String @map("event_id")

  @@id([userId, eventId])

  @@map("event_users")
}

enum EventType{
  ONLINE
  ONSITE
}

model Group{
  id String @id @default(uuid())
  name String
  description String
  createdAt DateTime @db.Timestamptz() @default(now())
  adminId String @map("admin_id")

  @@map("group")
}

model group_users {
  userId String @map("user_id")
  groupId String @map("group_id")
  @@id([userId, groupId])
  @@map("group_users")
}